extends layout

block content

  section.main
    header
      .row
        nav.main-nav.top-bar(data-topbar='', role='navigation')
          ul.title-area
            li.name

            span.toggle-topbar.menu-icon
              a(href='#')
                span Menu

          section#mean_nav.top-bar-section
            ul.right
              li
                a.search_again(href='#') Search Again
              li
                a(href='#scores') Your Scores
              li
                a(href='#community') Community
              li
                a(href='#accessibility') Accessibility
              li
                a(href='#environment') Environment
              li
                a(href='#safety') Safety
              if user
                li
                  a.save_button(href='#') Save Your Search
                li
                  a.prof(href='user/#{user.id}') Profile
                li
                  a.signout(href='signout') Sign Out
              else
                li
                  a.register(href='#') Sign In
                li
                  a.register(href='#') Sign Up
    .render-success(display='none')
      h2.sub_cap Your Search Have Been Saved In Your Profile
    section.caption
      .row
        if user
          h1.mean_cap Hi #{user.full_name},
          h2.sub_cap Discover 
            span.neighbor #{allData.renderRestaurants.location.title}
            span.with  With Neighbor
            span.good Good
        else
          h2.sub_cap Discover  
            span.neighbor #{allData.renderRestaurants.location.title} 
            span.with  With Neighbor
            span.good Good

        a.score_arrow.btn_details(href='#scores')
          span.peach See Your Healthy Home Scores
          img.arrow(src='images/btn_arrow.png', alt='')

  section#scores.scores
    .row
      h1.mean_title How Your Neighborhood Scores
      h2.sub_title Live Where You Love


    .row.scores_list
      .small-12.medium-3.large-3.columns

        img.serv_icon(src='images/icons/ic_local_activity_black_48dp/web/ic_local_activity_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{comScore}
        .btn_holder
          a.btn_fancy(href='#community')
            .solid_layer
            .border_layer
            .text_layer Community
        br
        p
          | Everyday life can be very busy. Make sure that all your life activities are close to home. When the community is close, everything is close.

      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_airport_shuttle_black_48dp/web/ic_airport_shuttle_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{allData.renderTransit[0]}
        .btn_holder
          a.btn_fancy(href='#accessibility')
            .solid_layer
            .border_layer
            .text_layer Accessibility
        br
        p
          | Travel time to work and entrainment can take away from precious time that can be used for other things. We will show you how accessible your new home will be to transit locations.
          

          
      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_public_black_48dp/web/ic_public_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{enviroScore}
        .btn_holder
          a.btn_fancy(href='#environment')
            .solid_layer
            .border_layer
            .text_layer Environment
        br
        p
          | Figuring out which area is best is tricky when comparing a lot of environmental factors. NeighborGood environment score is designed to help you answer your questions and make healthier choices.

      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_vpn_key_black_48dp/web/ic_vpn_key_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{allData.renderCrime[0]}
        .btn_holder
          a.btn_fancy(href='#safety')
            .solid_layer
            .border_layer
            .text_layer Safety
        br
        p
          | Safety is an important factor in reducing your stress at home. Become aware of criminal activity that has occurred within the neighborhood.

  section#community.community
    .expanded
      .large-7.columns
        #community_map
        nav.menu-ui.cm
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='schools') Schools
          a(href='#', data-filter='parks') Parks
          a(href='#', data-filter='restaurants') Restaurants
          a(href='#', data-filter='viewpoints') Viewpoints
          a(href='#', data-filter='cultural-spaces') Cultural Spaces

      .large-5.columns
        .community_sub
          h2.sub_cap Community
          if comScore <= 24
            p.font-large-white Your community score is #{comScore}. This location might require you to travel a bit farther to find parks and other wonderful community amenities.
          else if comScore >= 25 && comScore <= 49
            p.font-large-white Your community score is #{comScore}. This location will require moderate use of transportation to get to all your daily activities.
          else if comScore >= 50 && comScore <= 74
            p.font-large-white Your community score is #{comScore}. This is a great area to live. You are walking distance from a lot of community locations will help to reduce the time spent to travel to get to your destination.
          else
            p.font-large-white Awesome! Your community score is #{comScore}. A wonderful place to live! You are walking distance to many of your community locations. You may never need to leave your community for your daily activities and live it up in your night life.
          p.font-large-white Your score is based upon 5 key community categories in your area: school, parks, restaurants, viewpoints, and cultural spaces. The totals in these categories in your area will be compared to the overall average of all areas within Seattle.
  .cube
  section#accessibility.accessibility
    .expanded
      .large-7.columns
        #accessibility_map
        nav.menu-ui.am
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='bus-stop') Bus Stops
          a(href='#', data-filter='parking') Parking Lots/Garages

      .large-5.columns
        .accessibility_sub
          h2.sub_cap_sec Accessibility

          if allData.renderTransit[0] <= 24
            p.font-large-prime Your accessibility score is #{allData.renderTransit[0]}. You may want to rethink your use of transportation if you will be using public transportation for the majority of your travel. This area will be heavily dependent upon other methods of transportation. If this is a heavily populated area, make sure that their is public parking next to the location for those times people will want to visit.
          else if allData.renderTransit[0] >= 25 && allData.renderTransit[0] <= 49
            p.font-large-prime Your accessibility score is #{allData.renderTransit[0]}. This location has #{allData.renderTransit[1].data.list.length} bus stop locations within a half mile for you to reach your desired location. This location is mostly car dependent but bike transportation may just do the trick. There are bus stops near this location.
          else if allData.renderTransit[0] >= 50 && allData.renderTransit[0] <= 74
            p.font-large-prime Your accessibility score is #{allData.renderTransit[0]}. Great! This location has #{allData.renderTransit[1].data.list.length} bus stop locations within a half mile for you to choose from.
          else
            p.font-large-prime Booyah! Your accessibility score is #{allData.renderTransit[0]}. This is a paradise for public transportation. The #{allData.renderTransit[1].data.list.length} bus stops within a half mile provide a wealth of options to travel to your desired location. Dependance upon a car is not needed for this location.
          p.font-large-prime Your score is based upon the bus stops in the local area. Your score has been compared to the overall average of all areas within Seattle. You may also see the number of public parking lots and parking garages within walking distance to the inputed address.
          
          br
          
          img#walkScoreLogo(src="https://cdn.walk.sc/images/api-logo.png")
          p.font-large-prime #{allData.renderWalkScore.walkscore} (#{allData.renderWalkScore.description})
  .cube
  section#environment.environment
    .expanded
      .large-7.columns
        #environment_map
        nav.menu-ui.em
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='single-family') Single Family
          a(href='#', data-filter='multifamily') Multifamily
          a(href='#', data-filter='commercial') Commercial
          a(href='#', data-filter='institutional') Institutional
          a(href='#', data-filter='indulstrial') Indulstrial
      .large-5.columns
        .environment_sub
          h2.sub_cap Environment

          if enviroScore <= 24
            p.font-large-white The environment score is #{enviroScore}. This is an average based on the air quality and construction in your area. If you are looking for a quite area with less sound population and construction occurring in your area, this will not be the place for you. This area has a high concentration of open building permits that will increase the amount of noise and traffic in the area.
          else if enviroScore >= 25 && enviroScore <= 49
            p.font-large-white The environment score is #{enviroScore}. This is an average based on the air quality and construction in your area. We are all looking for an area that we can come home and relax after a hard days of work. This area will be busy with all the new construction that is going on in the area. This is not the best area for a low level of construction traffic, but hey, things could be worst.
          else if enviroScore >= 50 && enviroScore <= 74
            p.font-large-white The environment score is #{enviroScore}. This is an average based on the air quality and construction in your area. This is an area with a small amount of open building permits. This will be a relatively quite and less active area, in regards to permits, compared to other parts of Seattle. If you are looking for a quite neighborhood for your home, this may be the place.
          else
            p.font-large-white Oh yeah! The environment score is #{enviroScore}. This is an average based on the air quality and construction in your area. An awesome place with little to no building permits in the area. This area will not be filled with high noise, traffic, and congestion that can occur from a high level amount of permits.
          p.font-large-white #{allData.renderAqi.dominant_pollutant_text.main} #{allData.renderAqi.dominant_pollutant_text.causes} 
          
          br
          
          img#breezLogo(src='images/breezometer-logo.png')
          p.font-large-white BreezoMeter AQI: #{allData.renderAqi.breezometer_aqi} 
          p.font-large-white #{allData.renderAqi.breezometer_description}
  
  section#safety.safety
    .expanded
      .large-12.columns
        h2.sub_cap_sec.pad Safety
        nav.menu-ui.safe_menu
          a#all_crime.button.active(href='#') All Crime Data
          a#typeCenters.button(href='#') By Crime Type
          a#weekDayCenters.button(href='#') By Day Of Week
          a#monthDayCenters.button(href='#') By Day Of Month
          a#timeOfDayCenters.button(href='#') By Time Of Day
        .crime_graph
        
    .expanded
      .large-12.columns
        .safety_sub
          if allData.renderCrime[0] <= 24
            p.font-large-prime Your safety score is #{allData.renderCrime[0]}. This is a crime ridden area of Seattle. You may want to rethink of living in this area.
          else if allData.renderCrime[0] >= 25 && allData.renderCrime[0] <= 49
            p.font-large-prime Your safety score is #{allData.renderCrime[0]}. This area may not be ridden with crime, but it may not be a place you want to go on a walk at night.
          else if allData.renderCrime[0] >= 50 && allData.renderCrime[0] <= 74
            p.font-large-prime Your safety score is #{allData.renderCrime[0]}. You may feel comfortable walking the streets at night.
          else
            p.font-large-prime Utopia! Your safety score is #{allData.renderCrime[0]}. This is a safe place to live thanks to its low crime rate.
          p.font-large-prime Your score is based upon the amount of crimes reported in the last year from today and on the comparison of all areas in Seattle and their average. Hover over each topic bubble to view the total amount of crime was reported respective to the category. A high amount of crime will produce a low score.

  .shadow


  footer
  a#back_top.btn_fancy(href='#')
    .solid_layer
    .border_layer
    .text_layer
      img.top_arrow(src='images/top_arrow.png', alt='Back to top', title='')
      
  script.
    L.mapbox.accessToken = 'pk.eyJ1IjoiaGVucnliaSIsImEiOiJjaW42NmVvMmowZTFidXBra2xkM2N3cTE1In0.cdfJiLolXJoUefefWOKqew';
    
    var allData = !{JSON.stringify(allData)};
    console.log(allData);

    var communityMap = new L.mapbox.map('community_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 15);
    
    communityMap.touchZoom.disable();
    communityMap.doubleClickZoom.disable();
    communityMap.scrollWheelZoom.disable();
    communityMap.keyboard.disable();
    
    L.mapbox.styleLayer('mapbox://styles/henrybi/cin8j804n0090bckv5dtpjoe3').addTo(communityMap);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(communityMap);

    var communityGeoJson = [];
    
    if(allData.renderSchool) {
      for (var i = 0; i < allData.renderSchool[1].length; i++) {
        communityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderSchool[1][i].shape.longitude,
              allData.renderSchool[1][i].shape.latitude
            ],
            "type": "Point"
          },
          "properties": {
            "title": allData.renderSchool[1][i].name,
            "description": allData.renderSchool[1][i].type,
            "schools": true,
            "parks": false,
            "restaurants": false,
            "viewpoints": false,
            "cultural-spaces": false,
            "marker-color": "#63afb8",
            "marker-size": "medium",
            "marker-symbol": "school"
          }
        });
      }
    }
    
    if(allData.renderParks) {
      for (var j = 0; j < allData.renderParks[1].length; j++) {
        communityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderParks[1][j].longitude,
              allData.renderParks[1][j].latitude
            ],
            "type": "Point"
          },
          "properties": {
            "title": allData.renderParks[1][j].common_name,
            "schools": false,
            "parks": true,
            "restaurants": false,
            "viewpoints": false,
            "cultural-spaces": false,
            "marker-color": "#3ebc36",
            "marker-size": "medium",
            "marker-symbol": "park"
          }
        });
      }
    }

    if(allData.renderRestaurants) {
      for (var r = 1; r <= 9; r++) {
        communityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderRestaurants.nearby_restaurants[r].restaurant.location.longitude, allData.renderRestaurants.nearby_restaurants[r].restaurant.location.latitude
            ],
            "type": "Point"
          },
          "properties": {
            "title": allData.renderRestaurants.nearby_restaurants[r].restaurant.name,
            "schools": false,
            "parks": false,
            "restaurants": true,
            "viewpoints": false,
            "cultural-spaces": false,
            "marker-color": "#7bd0b5",
            "marker-size": "medium",
            "marker-symbol": "bar"
          }
        });
      }
    }
    
    if(allData.renderViewpoints) {
      for (var k = 0; k < allData.renderViewpoints[1].length; k++) {
        communityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderViewpoints[1][k].longitude,
              allData.renderViewpoints[1][k].latitude
            ],
            "type": "Point"
          },
          "properties": {
            "title": allData.renderViewpoints[1][k].common_name,
            "schools": false,
            "parks": false,
            "restaurants": false,
            "viewpoints": true,
            "cultural-spaces": false,
            "marker-color": "#b1c128",
            "marker-size": "medium",
            "marker-symbol": "star"
          }
        });
      }
    }
    
    if(allData.renderCultCenters) {
      for (var l = 0; l < allData.renderCultCenters[1].length; l++) {
        communityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderCultCenters[1][l].location.coordinates[0],
              allData.renderCultCenters[1][l].location.coordinates[1]
            ],
            "type": "Point"
          },
          "properties": {
            "title": allData.renderCultCenters[1][l].name,
            "schools": false,
            "parks": false,
            "restaurants": false,
            "viewpoints": false,
            "cultural-spaces": true,
            "marker-color": "#b65bc1",
            "marker-size": "medium",
            "marker-symbol": "music"
          }
        });
      }
    }

    var communityMarkers = L.mapbox.featureLayer().setGeoJSON(communityGeoJson).addTo(communityMap);

    $('.cm a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      communityMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
      return false;
    });


    var accessibilityMap = new L.mapbox.map('accessibility_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 16);
    
    accessibilityMap.touchZoom.disable();
    accessibilityMap.doubleClickZoom.disable();
    accessibilityMap.scrollWheelZoom.disable();
    accessibilityMap.keyboard.disable();

    L.mapbox.styleLayer('mapbox://styles/henrybi/cin8j804n0090bckv5dtpjoe3').addTo(accessibilityMap);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(accessibilityMap);

    var accessibilityGeoJson = [];
    
    if(allData.renderTransit) {
      for (var p = 0; p < allData.renderTransit[1].data.list.length; p++) {
        accessibilityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderTransit[1].data.list[p].lon,
              allData.renderTransit[1].data.list[p].lat
            ],
            "type": "Point"
          },
          "properties": {
            "title": "Bus-Stop",
            "description": allData.renderTransit[1].data.list[p].name,
            "bus-stop": true,
            "parking": false,
            "marker-color": "#4c8bc1",
            "marker-size": "medium",
            "marker-symbol": "bus"
          }
        });
      }
    }
    
    if(allData.renderParking) {
      for (var q = 0; q < allData.renderParking[1].length; q++) {
        accessibilityGeoJson.push({
          "type": "Feature",
          "geometry": {
            "coordinates": [
              allData.renderParking[1][q].shape.longitude,
              allData.renderParking[1][q].shape.latitude
            ],
            "type": "Point"
          },
          "properties": {
            "title": "Parking",
            "description": allData.renderParking[1][q].fac_type || allData.renderParking[1][q].fac_name || allData.renderParking[1][q].webname,
            "bus-stop": false,
            "parking": true,
            "marker-color": "#63afb8",
            "marker-size": "medium",
            "marker-symbol": "car"
          }
        });
      }
    }

    var accessibilityMarkers = L.mapbox.featureLayer().setGeoJSON(accessibilityGeoJson).addTo(accessibilityMap);

    $('.am a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      accessibilityMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
      return false;
    });
    
    var environmentMap = new L.mapbox.map('environment_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 16);
    
    environmentMap.touchZoom.disable();
    environmentMap.doubleClickZoom.disable();
    environmentMap.scrollWheelZoom.disable();
    environmentMap.keyboard.disable();

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(environmentMap);
    


    var environmentGeoJson = [];
    
    if(allData.renderPermits) {
      for (var o = 0; o < allData.renderPermits[1].length; o++) {
        if(allData.renderPermits[1][o].status !== 'Permit Closed' && allData.renderPermits[1][o].status !== 'CANCELLED' && allData.renderPermits[1][o].status !== undefined){
          if(allData.renderPermits[1][o].category === 'SINGLE FAMILY / DUPLEX'){
            environmentGeoJson.push({
              "type": "Feature",
              "geometry": {
                "coordinates": [
                  allData.renderPermits[1][o].location.longitude,
                  allData.renderPermits[1][o].location.latitude
                ],
                "type": "Point"
              },
              "properties": {
                "title": allData.renderPermits[1][o].status,
                "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
                "single-family": true,
                "multifamily": false,
                "commercial": false,
                "indulstrial": false,
                "institutional": false,
                "marker-color": "#63afb8",
                "marker-size": "medium",
                "marker-symbol": "star"
              }
            });
          } else if (allData.renderPermits[1][o].category === 'MULTIFAMILY'){
            environmentGeoJson.push({
              "type": "Feature",
              "geometry": {
                "coordinates": [
                  allData.renderPermits[1][o].location.longitude,
                  allData.renderPermits[1][o].location.latitude
                ],
                "type": "Point"
              },
              "properties": {
                "title": allData.renderPermits[1][o].status,
                "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
                "single-family": false,
                "multifamily": true,
                "commercial": false,
                "indulstrial": false,
                "institutional": false,
                "marker-color": "#00dab6",
                "marker-size": "medium",
                "marker-symbol": "star"
              }
            });
          } else if (allData.renderPermits[1][o].category === 'COMMERCIAL'){
            environmentGeoJson.push({
              "type": "Feature",
              "geometry": {
                "coordinates": [
                  allData.renderPermits[1][o].location.longitude,
                  allData.renderPermits[1][o].location.latitude
                ],
                "type": "Point"
              },
              "properties": {
                "title": allData.renderPermits[1][o].status,
                "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
                "single-family": false,
                "multifamily": false,
                "commercial": true,
                "indulstrial": false,
                "institutional": false,
                "marker-color": "#008ada",
                "marker-size": "medium",
                "marker-symbol": "restaurant"
              }
            });
          } else if (allData.renderPermits[1][o].category === 'INSTITUTIONAL'){
            environmentGeoJson.push({
              "type": "Feature",
              "geometry": {
                "coordinates": [
                  allData.renderPermits[1][o].location.longitude,
                  allData.renderPermits[1][o].location.latitude
                ],
                "type": "Point"
              },
              "properties": {
                "title": allData.renderPermits[1][o].status,
                "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
                "single-family": false,
                "multifamily": false,
                "commercial": false,
                "indulstrial": false,
                "institutional": true,
                "marker-color": "#007123",
                "marker-size": "medium",
                "marker-symbol": "school"
              }
            });
          } else if (allData.renderPermits[1][o].category === 'INDULSTRIAL'){
            environmentGeoJson.push({
              "type": "Feature",
              "geometry": {
                "coordinates": [
                  allData.renderPermits[1][o].location.longitude,
                  allData.renderPermits[1][o].location.latitude
                ],
                "type": "Point"
              },
              "properties": {
                "title": allData.renderPermits[1][o].status,
                "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
                "single-family": false,
                "multifamily": false,
                "commercial": false,
                "indulstrial": false,
                "institutional": true,
                "marker-color": "#001071",
                "marker-size": "medium",
                "marker-symbol": "harbor"
              }
            });
          }
        }
      }
    }
    
    var environmentMarkers = L.mapbox.featureLayer().setGeoJSON(environmentGeoJson).addTo(environmentMap);
    
    $('.em a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      environmentMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
      return false;
    });
    
  script(src='https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.js')
  script(src='/javascripts/tooltip.js')
  script(src='/javascripts/bubble.js')
